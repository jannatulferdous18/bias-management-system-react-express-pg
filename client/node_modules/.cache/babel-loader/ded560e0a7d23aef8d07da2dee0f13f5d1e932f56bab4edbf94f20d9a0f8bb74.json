{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\TUC\\\\Thesis_documents\\\\Mine\\\\bias-management-system\\\\client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [username, setUsername] = useState(() => {\n    return localStorage.getItem('username') || '';\n  });\n  const logout = () => {\n    setUsername('');\n    localStorage.removeItem('username'); // optional: if using localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      username,\n      setUsername,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"F9l95gBMrM6e+WLFq+fhKKAKq9Y=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","username","setUsername","localStorage","getItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Studies/TUC/Thesis_documents/Mine/bias-management-system/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\ninterface AuthContextType {\r\n  username: string;\r\n  setUsername: (name: string) => void;\r\n  logout: () => void; \r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [username, setUsername] = useState(() => {\r\n    return localStorage.getItem('username') || '';\r\n  });\r\n  \r\n    const logout = () => {\r\n      setUsername('');\r\n      localStorage.removeItem('username'); // optional: if using localStorage\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ username, setUsername, logout }}>\r\n          {children}\r\n        </AuthContext.Provider>\r\n      );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C,OAAOU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE;EAC/C,CAAC,CAAC;EAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBH,WAAW,CAAC,EAAE,CAAC;IACfC,YAAY,CAACG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACIX,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP,QAAQ;MAAEC,WAAW;MAAEG;IAAO,CAAE;IAAAN,QAAA,EAC5DA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE/B,CAAC;AAACZ,EAAA,CAfWF,YAAqD;AAAAe,EAAA,GAArDf,YAAqD;AAiBlE,OAAO,MAAMgB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACoB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAC5E,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}